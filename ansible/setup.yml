---
- hosts: webserver
  become: yes
  vars:
    db_name: "{{ lookup('env', 'DB_NAME') }}"
    db_username: "{{ lookup('env', 'DB_USERNAME') }}"
    db_password: "{{ lookup('env', 'DB_PASSWORD') }}"
    ec2_instance_ip: "{{ lookup('env', 'EC2_INSTANCE_IP') }}"
    rds_endpoint: "{{ lookup('env', 'RDS_ENDPOINT') }}"
    efs_id: "{{ lookup('env', 'EFS_ID') }}"
    aws_region: "{{ lookup('env', 'AWS_REGION') }}"
    ec2_instance_az: "{{ lookup('env', 'EC2_INSTANCE_AZ') }}"
    efs_mount_point: /mnt/efs  # Define the mount point for the EFS
  tasks:
    - name: Update all packages to the latest version
      yum:
        name: '*'
        state: latest

    - name: Install Amazon EFS Utilities
      yum:
        name: amazon-efs-utils
        state: present

    - name: Create a directory for mounting EFS
      file:
        path: "{{ efs_mount_point }}"
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Install Botocore
      pip:
        name: botocore
        state: present

    - name: Mount the EFS file system
      command: "mount -t efs -o tls,az={{ ec2_instance_az }} {{ efs_id }}:/ {{ efs_mount_point }}"
      args:
        creates: "{{ efs_mount_point }}/lost+found"  # Only run if not already mounted

    - name: Install Apache
      yum:
        name: httpd
        state: present

    - name: Ensure Apache is running and enabled
      service:
        name: httpd
        state: started
        enabled: yes

    - name: Install PHP 7.4 and extensions
      shell: |
        amazon-linux-extras enable php7.4
        yum clean metadata
        yum install -y php php-common php-xml php-mysqlnd php-json php-cli php-gd php-mbstring php-opcache

    - name: Create phpinfo.php for verification
      copy:
        content: "<?php phpinfo(); ?>"
        dest: /var/www/html/phpinfo.php

    - name: Restart Apache to load PHP
      service:
        name: httpd
        state: restarted

    - name: Install MySQL client
      yum:
        name: mysql
        state: present

    - name: Download WordPress
      get_url:
        url: https://wordpress.org/latest.tar.gz
        dest: /tmp/wordpress.tar.gz

    - name: Set ownership of EFS directory
      file:
        path: "{{ efs_mount_point }}"
        state: directory
        owner: ec2-user
        group: ec2-user
        mode: '0755'

    - name: Extract WordPress directly to EFS
      unarchive:
        src: /tmp/wordpress.tar.gz
        dest: "{{ efs_mount_point }}/"
        remote_src: yes
        creates: "{{ efs_mount_point }}/wordpress"

    - name: Configure WordPress
      template:
        src: templates/wp-config.php.j2
        dest: "{{ efs_mount_point }}/wordpress/wp-config.php"

    - name: Update Apache DocumentRoot
      lineinfile:
        path: /etc/httpd/conf/httpd.conf
        regexp: '^DocumentRoot'
        line: 'DocumentRoot "{{ efs_mount_point }}/wordpress"'
        state: present

    - name: Update Apache Directory settings
      blockinfile:
        path: /etc/httpd/conf/httpd.conf
        marker: "# {mark} ANSIBLE MANAGED BLOCK"
        block: |
          <Directory "{{ efs_mount_point }}/wordpress">
            Options Indexes FollowSymLinks
            AllowOverride All
            Require all granted
          </Directory>

    - name: Restart Apache to apply new DocumentRoot
      service:
        name: httpd
        state: restarted
