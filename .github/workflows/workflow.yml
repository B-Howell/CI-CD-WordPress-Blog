name: Deploy Infrastructure and Configure WordPress

on:
  workflow_dispatch:
  push:
    branches:
      - master

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with: 
          terraform_version: 1.4.0
          terraform_wrapper: false

      - name: Terraform Init and Apply
        run: |
          cd terraform
          terraform init
          terraform apply -auto-approve
        env:
          TF_VAR_db_username: ${{ secrets.DB_USERNAME }}
          TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
          TF_VAR_db_name: ${{ secrets.DB_NAME }}

      - name: Capture Terraform Outputs
        id: terraform-outputs
        run: |
          cd terraform
          echo "EC2_INSTANCE_IP=$(terraform output -raw ec2_instance_ip)" >> $GITHUB_ENV
          echo "RDS_ENDPOINT=$(terraform output -raw rds_endpoint)" >> $GITHUB_ENV
          echo "EFS_ID=$(terraform output -raw efs_id)" >> $GITHUB_ENV

      - name: Print Captured Outputs
        run: |
          echo "Captured EC2 Instance IP: ${{ env.EC2_INSTANCE_IP }}"
          echo "Captured RDS Endpoint: ${{ env.RDS_ENDPOINT }}"
          echo "Captured EFS ID: ${{ env.EFS_ID }}"

      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY_BASE64 }}" | base64 --decode > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
  
      - name: Prepare Ansible Inventory
        run: |
          echo "[webserver]" > ansible/inventory.ini
          echo "ec2-instance ansible_host=${{ env.EC2_INSTANCE_IP }} ansible_user=ec2-user ansible_ssh_private_key_file=~/.ssh/id_rsa" >> ansible/inventory.ini
          echo "[webserver:vars]" >> ansible/inventory.ini
          echo "ansible_python_interpreter=/usr/bin/python3" >> ansible/inventory.ini
  
      - name: Add EC2 host key to known_hosts
        run: |
          ssh-keyscan -H ${{ env.EC2_INSTANCE_IP }} >> ~/.ssh/known_hosts

      - name: Print Debug Information
        run: |
          echo "EFS ID: $EFS_ID"
          echo "AWS Region: $AWS_REGION"
        
  
      - name: Run Ansible Playbook
        run: |
          cd ansible
          ansible-playbook -i inventory.ini setup.yml
        env:
          ANSIBLE_HOST_KEY_CHECKING: False
          EC2_INSTANCE_IP: ${{ env.EC2_INSTANCE_IP }}
          DB_NAME: ${{ env.DB_NAME }}
          DB_USER: ${{ env.DB_USER }}
          DB_PASSWORD: ${{ env.DB_PASSWORD }}
          RDS_ENDPOINT: ${{ env.RDS_ENDPOINT }}
          EFS_ID: ${{ env.EFS_ID }}
          AWS_REGION: ${{ env.AWS_REGION }}

